Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true

Example 3:
Input: s = "(]"
Output: false

Solution:

class Solution {
public:
bool isValid(string s) {
    stack <char> t;
    for(int i=0;i<s.length();i++)
    {
        if(s[i]=='(' or s[i]=='{' or s[i]=='[')
        {
            t.push(s[i]);
        }
        else 
        {
           if((t.size()>0 ) and ((t.top()=='(' and s[i]==')') or (t.top()=='{' and s[i]=='}') or (t.top()=='[' and s[i]==']')))
               
               t.pop();
           
            else
                return false;
        }
    }
    if(t.empty())
        return true;
           
    return false;
        
    }
};
