Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

Example 3:
Input: s = "paper", t = "title"
Output: true

Special example: s=badc, t=baba
output: false

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        unordered_map<char,char> ms;
        unordered_map<char,char> mt;
        for(int i=0;i<s.length();i++)
        {
            if(ms.find(s[i])!=ms.end() and ms[s[i]]!=t[i])
                 return false;
            if(mt.find(t[i])!=mt.end() and mt[t[i]]!=s[i])
                 return false;
                 
            ms[s[i]]=t[i];
            mt[t[i]]=s[i];
            
        }
        return true;
    }
};
