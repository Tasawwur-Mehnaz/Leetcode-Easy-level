Given the root of a binary tree, return the inorder traversal of its nodes' values.

Example 1:
Input: root = [1,null,2,3]
Output: [1,3,2]

Solution:

class Solution {
public:
    vector<int> inorder(TreeNode* root)
    {
        vector<int> v;
        stack<TreeNode*> st;
        while(true)
        {
            if(root!=NULL)
            {
                st.push(root);
                root=root->left;
            }
            else
            {
                if(st.empty())
                    break;
                else
                {
                    root=st.top();
                    st.pop();
                    v.push_back(root->val);
                    root=root->right;
                }
            }
        }
        return v;
    }
    
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        ans=inorder(root);
        return ans;
    }
};
