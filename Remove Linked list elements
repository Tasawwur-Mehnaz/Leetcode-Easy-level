Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

Example 1:

Input: head = [1,2,6,3,4,5,6], val = 6
Output: [1,2,3,4,5]

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==nullptr)
            return nullptr;
        ListNode* curr=head;
        ListNode* prev=nullptr;
        
        while(curr!=NULL)
        {
            if(curr->val==val)
            {
                if(prev!=NULL)
                {
                   prev->next=curr->next;
                }
                else
                {
                    head=curr->next;
                }
           
            }   
            else
            {
                prev=curr;
               
            }
             curr=curr->next;
        }
        return head;
    }
};
