Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
A leaf is a node with no children.

Example 1:
Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
Output: true
Explanation: The root-to-leaf path with the target sum is shown.

Solution:

class Solution {
public:
   
    bool hasPathSum(TreeNode* root, int targetsum) {
        if(root==NULL)
             return false;
       
        bool ans=false;
        targetsum-=root->val;
        
        if(root->left==NULL && root->right==NULL && targetsum==0)
            return true;
        
         ans=ans|| hasPathSum(root->left,targetsum);
         ans=ans|| hasPathSum(root->right,targetsum);
        
         return ans;
    }
};

OR

class Solution {
public:
   
    bool hasPathSum(TreeNode* root, int targetsum) {
        if(root==NULL)
             return false;
       
        targetsum-=root->val;
        
        if(root->left==NULL && root->right==NULL && targetsum==0)
            return true;
        
         return hasPathSum(root->left,targetsum) || hasPathSum(root->right,targetsum) ;
    }
};
