You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.

Example:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Solution:
Iterative Method:

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ans;
        ans=new ListNode();
        ListNode* t=ans;
        ListNode* l1=list1;
        ListNode* l2=list2;
        while(l1!=NULL and l2!=NULL)
        {
            if(l1->val<l2->val)
            {
                t->next=l1;
                t=t->next;
                l1=l1->next;

            }
            else
            {
                t->next=l2;
                t=t->next;
                l2=l2->next;
            }
            
        }
        while(l1!=NULL)
        {
            t->next=l1;
            t=t->next;
            l1=l1->next;

        }
        while(l2!=NULL)
        {
            t->next=l2;
            t=t->next;
            l2=l2->next;
        }
        return ans->next;
    }
};
